pipelines:
  default:
    - step:
        name: Run PHPCS.
        image: composer
        caches:
          - composer
        script:
          - apt-get update && apt-get install -y unzip
          - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
          - composer -V
          - rm composer.*
          - composer require dealerdirect/phpcodesniffer-composer-installer squizlabs/php_codesniffer wp-coding-standards/wpcs --no-interaction --prefer-dist --no-progress
          - composer install --prefer-dist --no-progress --no-interaction
          - ./vendor/bin/phpcs --ignore=twenty htdocs/wp-content/themes -pn --extensions=php --standard=WordPress-Core
    - step:
        name: Lint SCSS and JS.
        script:
          - yarn && yarn lint
  branches:
    staging:
      - step:
          name: Run PHPCS.
          image: composer
          caches:
            - composer
          script:
            - apt-get update && apt-get install -y unzip
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer -V
            - rm composer.*
            - composer require dealerdirect/phpcodesniffer-composer-installer squizlabs/php_codesniffer wp-coding-standards/wpcs --no-interaction --prefer-dist --no-progress
            - composer install --prefer-dist --no-progress --no-interaction
            - ./vendor/bin/phpcs --ignore=twenty htdocs/wp-content/themes -pn --extensions=php --standard=WordPress-Core
      - step:
          name: Lint SCSS and JS.
          script:
            - yarn --ignore-engines && yarn lint
      - step:
          name: Check that remote status is porcelain clean.
          script:
            - ssh -p $STAGING_PORT $USER_HOST 'cd /data/wordpress/; git status; [ -z "$(git status --porcelain)" ]; exit $?'
      - step:
          name: Deploy to staging and build assets, and add tag for cache busting..
          deployment: staging
          script:
            - ssh -p $STAGING_PORT $USER_HOST 'cd /data/wordpress/; git status; git fetch; git merge origin/staging; composer install --no-dev; wp-restart-nginx; yarn --ignore-engines && yarn build; ./customizations/scripts-deployment-tag.sh;'
    master:
      - step:
          name: Run PHPCS.
          image: php:7.2.0
          caches:
            - composer
          script:
            - apt-get update && apt-get install -y unzip openssh-client
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer -V
            - rm composer.*
            - composer require dealerdirect/phpcodesniffer-composer-installer squizlabs/php_codesniffer wp-coding-standards/wpcs --no-interaction --prefer-dist --no-progress
            - composer install --prefer-dist --no-progress --no-interaction
            - ./vendor/bin/phpcs --ignore=twenty htdocs/wp-content/themes -pn --extensions=php --standard=WordPress-Core
      - step:
          name: Lint SCSS and JS.
          script:
            - yarn --ignore-engines && yarn lint
      - step:
          name: Check that remote status is porcelain clean.
          script:
            - ssh -p $PRODUCTION_PORT $USER_HOST 'cd /data/wordpress/; git status; [ -z "$(git status --porcelain)" ]; exit $?'
      - step:
          name: Deploy to production, build assets, and add tag for cache busting.
          deployment: production
          script:
            - ssh -p $PRODUCTION_PORT $USER_HOST 'cd /data/wordpress/; git status; git fetch; git merge origin/master; composer install --no-dev; wp-restart-nginx; yarn --ignore-engines && yarn build; ./customizations/scripts-deployment-tag.sh;'

